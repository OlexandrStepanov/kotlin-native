buildscript {
    repositories {
        google()
        jcenter()
        maven { url 'https://dl.bintray.com/kotlin/kotlin-dev' }
        maven { url 'https://dl.bintray.com/kotlin/kotlin-eap' }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.3.2'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-serialization:$kotlin_version"
        classpath 'com.google.gms:google-services:4.2.0'
    }
}

plugins {
    id 'kotlin-multiplatform'
    id 'kotlinx-serialization'
    id 'kotlin-native-cocoapods'
}

allprojects {
    repositories {
        google()
        jcenter()
        maven { url 'https://dl.bintray.com/kotlin/kotlin-dev' }
        maven { url 'https://dl.bintray.com/kotlin/kotlin-eap' }
    }
}

group = "org.jetbrains.kotlin.sample.cocoapod"
version = "1.0"


kotlin {
    // Add a platform switching to have an IDE support.
    def buildForDevice = project.findProperty("kotlin.native.cocoapods.target") == "ios_arm"
    if (buildForDevice) {
        iosArm64("iOS64")
        iosArm32("iOS32")

        val iOSMain by sourceSets.creating
        sourceSets["iOS64Main"].dependsOn(iOSMain)
        sourceSets["iOS32Main"].dependsOn(iOSMain)
    } else {
        iosX64("iOS")
    }

    cocoapods {
        // Configure fields required by CocoaPods.
        summary = "Working with AFNetworking from Kotlin/Native using CocoaPods"
        homepage = "https://github.com/JetBrains/kotlin-native"
        
        // Configure a dependency on AFNetworking. It will be added in all macOS and iOS targets.
        pod("AFNetworking", "~> 3.2.0")
    }

    sourceSets {
        commonMain {
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-stdlib-common'
                implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core-common:${rootProject.ext.coroutines_version}"
                implementation "io.ktor:ktor-client-core:${rootProject.ext.ktor_version}"
                implementation "io.ktor:ktor-client-json:${rootProject.ext.ktor_version}"
                implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime-common:${rootProject.ext.serialization_version}"
            }
        }
        iosMain {
            dependencies {
                implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core-native:${rootProject.ext.coroutines_version}"
                implementation "io.ktor:ktor-client-ios:${rootProject.ext.ktor_version}"
                implementation "io.ktor:ktor-client-core-native:${rootProject.ext.ktor_version}"
                implementation "io.ktor:ktor-client-json-native:${rootProject.ext.ktor_version}"
                implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime-native:${rootProject.ext.serialization_version}"

            }
        }
    }
}
